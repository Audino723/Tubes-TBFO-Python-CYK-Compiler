BLOCK_CODE -> BLOCK_CODE BLOCK_CODE | ASSIGNMENT | ASSIGN_INTEGER | IMPORT_FORM | IF_STATE | IF_STATE ELSE_STATE | IF_STATE ELIF_STATE | WHILE_LOOP | FOR_FORM | DEF_STATE | WITH_STATEMENT | WRITE_ALGORITHM | PASS | ALPHABET POINT APPEND OP_BRACK ALPHABET CS_BRACK | OPERATOR | PRINT_STATE | CLASS_STATE | ALPHABET POINT ALPHABET PARAM_STATE | FUNC_FORM | ASSIGN_DICT | OPEN_CALL | ASSIGN_LIST_IDX | IS_FORM
IMPORT_FORM -> IMPORT ALPHABET | IMPORT ALPHABET AS ALPHABET | FROM ALPHABET IMPORT ALPHABET | FROM ALPHABET IMPORT ALPHABET AS ALPHABET | FROM ALPHABET IMPORT PARAM_IMPORT
IF_STATE -> IF_ALGORITHM | IF_ALGORITHM ELSE_STATE | IF_ALGORITHM ELIF_STATE
IF_STATE_DEF -> IF_ALGORITHM_DEF | IF_ALGORITHM_DEF ELSE_STATE_DEF | IF_ALGORITHM_DEF ELIF_STATE_DEF
IF_STATE_NESTED -> IF_ALGORITHM_NESTED | IF_ALGORITHM_NESTED ELSE_STATE_NESTED | IF_ALGORITHM_NESTED ELIF_STATE_NESTED
IF_ALGORITHM -> IF CONDITION COLON BLOCK_CODE | IF CONDITION COLON RAISE_STATE
IF_ALGORITHM_DEF -> IF CONDITION COLON DEF_ALGORITHM | IF CONDITION COLON DEF_RETURN | IF CONDITION COLON RAISE_STATE
IF_ALGORITHM_NESTED -> IF CONDITION COLON ALGORITHM_NESTED | IF CONDITION COLON RAISE_STATE
IF_CONDITION -> IF CONDITION
ELIF_STATE -> ELIF_ALGORITHM | ELIF_ALGORITHM ELSE_STATE | ELIF_ALGORITHM ELIF_STATE
ELIF_STATE_DEF -> ELIF_ALGORITHM_DEF | ELIF_ALGORITHM_DEF ELSE_STATE_DEF | ELIF_ALGORITHM_DEF ELIF_STATE_DEF
ELIF_STATE_NESTED -> ELIF_ALGORITHM_NESTED | ELIF_ALGORITHM_NESTED ELSE_STATE_NESTED | ELIF_ALGORITHM_NESTED ELIF_STATE_NESTED
ELIF_ALGORITHM -> ELIF CONDITION COLON BLOCK_CODE | ELIF CONDITION COLON RAISE_STATE
ELIF_ALGORITHM_DEF -> ELIF CONDITION COLON DEF_ALGORITHM | ELIF CONDITION COLON DEF_RETURN | ELIF CONDITION COLON RAISE_STATE
ELIF_ALGORITHM_NESTED -> ELIF CONDITION COLON ALGORITHM_NESTED | ELIF CONDITION COLON RAISE_STATE
ELSE_STATE -> ELSE COLON BLOCK_CODE | ELSE COLON RAISE_STATE | ELSE IF_STATE
ELSE_STATE_DEF -> ELSE COLON DEF_ALGORITHM | ELSE COLON DEF_RETURN | ELSE IF_STATE_DEF | ELSE COLON RAISE_STATE
ELSE_STATE_NESTED -> ELSE COLON ALGORITHM_NESTED | ELSE IF_STATE_NESTED | ELSE COLON RAISE_STATE
WHILE_LOOP -> WHILE CONDITION COLON ALGORITHM_NESTED | WHILE BOOL COLON ALGORITHM_NESTED | WHILE OP_BRACK BOOL CS_BRACK COLON ALGORITHM_NESTED
FOR_FORM -> FOR FOR_LOOP COLON ALGORITHM_NESTED
FOR_LOOP -> ALPHABET IN ALPHABET | ALPHABET IN RANGE OP_BRACK EXPRESSION CS_BRACK | ALPHABET IN RANGE OP_BRACK EXPRESSION COMMA EXPRESSION CS_BRACK | ALPHABET IN RANGE OP_BRACK EXPRESSION COMMA EXPRESSION COMMA EXPRESSION CS_BRACK
ALGORITHM_NESTED -> ALGORITHM_NESTED ALGORITHM_NESTED | BREAK | CONTINUE | ASSIGNMENT | ASSIGN_INTEGER | IF_STATE_NESTED | IF_STATE_NESTED ELSE_STATE_NESTED | IF_STATE_NESTED ELIF_STATE_NESTED | WHILE_LOOP | FOR_FORM | WITH_STATEMENT | WRITE_ALGORITHM | PASS | ALPHABET POINT APPEND OP_BRACK ALPHABET CS_BRACK | OPERATOR | PRINT_STATE | FUNC_FORM | ASSIGN_LIST_IDX
DEF_STATE -> DEF ALPHABET PARAM_STATE COLON DEF_ALGORITHM | DEF ALPHABET PARAM_STATE COLON DEF_RETURN | DEF ALPHABET PARAM_STATE COLON PRINT_STATE
DEF_ALGORITHM -> DEF_ALGORITHM DEF_ALGORITHM | ASSIGNMENT | ASSIGN_INTEGER | IF_STATE_DEF | IF_STATE_DEF ELSE_STATE_DEF | IF_STATE_DEF ELIF_STATE_DEF | WHILE_LOOP | FOR_FORM | DEF_STATE | WITH_STATEMENT | WRITE_ALGORITHM | PASS | ALPHABET POINT APPEND OP_BRACK ALPHABET CS_BRACK | OPERATOR | PRINT_STATE | CLASS_STATE | IF CONDITION COLON DEF_RETURN | SELF_STATE | ALGORITHM_NESTED DEF_RETURN
DEF_RETURN -> DEF_ALGORITHM RETURN_STATE | RETURN_STATE
PARAM_STATE -> OP_BRACK PARAM CS_BRACK | OP_BRACK CS_BRACK
PARAM -> ALPHABET | ALPHABET COMMA PARAM | ALPHABET EQUAL STRING COMMA PARAM | ALPHABET EQUAL NUM | ALPHABET EQUAL STRING | ALPHABET EQUAL ALPHABET COMMA PARAM | ALPHABET EQUAL ALPHABET | FUNC_FORM | SELF COMMA PARAM | SELF | ALPHABET EQUAL DICT
PARAM_IMPORT -> ALPHABET | ALPHABET COMMA PARAM_IMPORT
OPERATOR -> INPUT OP_BRACK ALPHABET CS_BRACK | OUTPUT OP_BRACK ALPHABET CS_BRACK | ALPHABET EQUAL EXPRESSION 
CONDITION -> OP_BRACK CONDITION CS_BRACK | CONDITION LOGIC_OPERATOR CONDITION | EXPRESSION RELATION_OPERATOR EXPRESSION | EXPRESSION RELATION_OPERATOR LIST_FORM | EXPRESSION IN EXPRESSION | NOT CONDITION | ALPHABET | BOOL | FUNC_FORM | SELF_STATE RELATION_OPERATOR EXPRESSION
PARAM_STATE_INPUT -> OP_BRACK PARAM_INPUT CS_BRACK | OP_BRACK CS_BRACK 
PARAM_INPUT -> ALPHABET | STRING | NUM | ALPHABET COMMA PARAM_INPUT |  STRING COMMA PARAM_INPUT | NUM COMMA PARAM_INPUT
EXPRESSION -> FLOAT | ALPHABET | NUM | NEGATIVE_NUM | FUNC_FORM | NEGATIVE_FLOAT | OP_BRACK EXPRESSION CS_BRACK | EXPRESSION ARITHMATIC_OPERATOR EXPRESSION | LEN OP_BRACK ALPHABET CS_BRACK | LEN OP_BRACK ALPHABET CS_BRACK EXPRESSION | ALPHABET POINT ALPHABET | NONE | STRING | ALPHABET OP_SQ_BRACK INDEX CS_SQ_BRACK | BOOL
INDEX -> ALPHABET | NUM | NEGATIVE_NUM | INDEX ARITHMATIC_OPERATOR INDEX | LEN OP_BRACK ALPHABET CS_BRACK | LEN OP_BRACK ALPHABET CS_BRACK INDEX | ALPHABET POINT ALPHABET | ALPHABET OP_SQ_BRACK INDEX CS_SQ_BRACK
RETURN_STATE -> RETURN RETURN_PARAM | RETURN OP_BRACK RETURN_PARAM CS_BRACK
RETURN_PARAM -> ALPHABET | ALPHABET COMMA RETURN_PARAM | NUM | NEGATIVE_NUM | FLOAT | NEGATIVE_FLOAT | STRING | BOOL | EXPRESSION ARITHMATIC_OPERATOR EXPRESSION
CLASS_STATE -> CLASS ALPHABET COLON CLASS_ALGORITHM 
CLASS_ALGORITHM -> CLASS_ALGORITHM CLASS_ALGORITHM | ASSIGNMENT | ASSIGN_INTEGER | IMPORT_FORM | IF_ALGORITHM | IF_ALGORITHM ELSE_STATE | IF_ALGORITHM ELIF_STATE | WHILE_LOOP | FOR_FORM | DEF_CLASS_STATE | WITH_STATEMENT | DEF_STATE | WRITE_ALGORITHM | PASS | ALPHABET POINT APPEND OP_BRACK ALPHABET CS_BRACK | OPERATOR | PRINT_STATE
SELF_STATE -> SELF POINT ALPHABET
DEF_CLASS_STATE -> DEF ALPHABET OP_BRACK SELF COMMA PARAM CS_BRACK BLOCK_CODE | DEF ALPHABET OP_BRACK SELF COMMA PARAM CS_BRACK DEF_RETURN
LIST_FORM -> OP_SQ_BRACK CS_SQ_BRACK | OP_SQ_BRACK ELMT_LIST CS_SQ_BRACK | OP_SQ_BRACK LIST_FORM CS_SQ_BRACK | OP_SQ_BRACK ALPHABET FOR FOR_LOOP CS_SQ_BRACK
ELMT_LIST -> LIST_FORM COMMA LIST_FORM | LIST_FORM COMMA ELMT_LIST | ELMT_LIST COMMA ELMT_LIST | ELMT_LIST COMMA LIST_FORM | EXPRESSION | EXPRESSION COMMA LIST_FORM | NUM | NUM COMMA LIST_FORM | STRING | STRING COMMA LIST_FORM
GET_LIST_IDX -> ALPHABET OP_SQ_BRACK ALPHABET CS_SQ_BRACK | ALPHABET OP_SQ_BRACK NUM CS_SQ_BRACK | GET_LIST_IDX OP_SQ_BRACK ALPHABET CS_SQ_BRACK | GET_LIST_IDX OP_SQ_BRACK NUM CS_SQ_BRACK
ASSIGN_LIST_IDX -> GET_LIST_IDX ASSIGN_OPERATOR EXPRESSION
STRING -> QUOTE_MARK STRING_OF_ALPHA QUOTE_MARK | DQUOTE_MARK STRING_OF_ALPHA DQUOTE_MARK | QUOTE_MARK QUOTE_MARK | DQUOTE_MARK DQUOTE_MARK
STRING_OF_ALPHA -> STRING_OF_ALPHA STRING_OF_ALPHA | ALPHABET | ALPHABET STRING_OF_ALPHA 
SENTENCE -> ALPHABET | ALPHABET SENTENCE
ASSIGNMENT -> ALPHABET EQUAL EXPRESSION | ALPHABET EQUAL STRING | ALPHABET EQUAL LIST_FORM | ALPHABET EQUAL FUNC_FORM | ALPHABET EQUAL INPUT PARAM_STATE_INPUT | SELF_STATE EQUAL EXPRESSION | SELF_STATE ASSIGN_OPERATOR EXPRESSION | ALPHABET OP_SQ_BRACK INDEX CS_SQ_BRACK EQUAL EXPRESSION
ASSIGN_INTEGER -> ALPHABET ASSIGN_OPERATOR EXPRESSION
WITH_STATEMENT -> WITH OPEN OP_BRACK STRING COMMA STRING CS_BRACK AS ALPHABET COLON BLOCK_CODE | WITH OPEN_CALL AS ALPHABET COLON BLOCK_CODE
WRITE_ALGORITHM -> ALPHABET POINT WRITE OP_BRACK STRING CS_BRACK | ALPHABET POINT WRITE OP_BRACK EXPRESSION CS_BRACK | ALPHABET POINT WRITE OP_BRACK ALPHABET CS_BRACK
FLOAT -> NUM POINT NUM
NEGATIVE_FLOAT -> MINUS FLOAT
NEGATIVE_NUM -> MINUS NUM
ALPHABET -> word
NUM -> num
BOOL -> True | False
IS_FORM -> EXPRESSION IS EXPRESSION | ALPHABET IS GET_LIST_IDX | ALPHABET IS LIST_FORM
ARITHMATIC_OPERATOR -> MINUS | PLUS | MUL | DIV | MOD | MUL MUL
LOGIC_OPERATOR -> AND | OR | NOT
RELATION_OPERATOR -> GREATER | LESS | GREATER EQUAL | LESS EQUAL | EQUAL EQUAL | EXC_MARK EQUAL | IS_FORM
ASSIGN_OPERATOR -> EQUAL | PLUS EQUAL | MINUS EQUAL | MUL EQUAL | DIV EQUAL
PRINT_STATE -> PRINT OP_BRACK CONDITION CS_BRACK | PRINT OP_BRACK STRING CS_BRACK | PRINT OP_BRACK ALPHABET CS_BRACK | PRINT OP_BRACK EXPRESSION CS_BRACK | PRINT OP_BRACK FUNC_FORM CS_BRACK | PRINT OP_BRACK CS_BRACK | PRINT OP_BRACK IS_FORM CS_BRACK
FUNC_FORM -> ALPHABET PARAM_STATE_FUNC | ALPHABET POINT FUNC_FORM | ALPHABET POINT OPEN_CALL  | ALPHABET OP_BRACK STRING CS_BRACK | ALPHABET OP_SQ_BRACK INDEX CS_SQ_BRACK PARAM_STATE_FUNC | ALPHABET OP_SQ_BRACK INDEX CS_SQ_BRACK POINT FUNC_FORM
PARAM_STATE_FUNC ->  OP_BRACK PARAM_FUNC CS_BRACK | OP_BRACK CS_BRACK
PARAM_FUNC -> ALPHABET | STRING | NUM | DICT | LIST_FORM | ALPHABET COMMA PARAM_FUNC | STRING COMMA PARAM_FUNC | NUM COMMA PARAM_FUNC | DICT COMMA PARAM_FUNC | LIST_FORM COMMA PARAM_FUNC | ALPHABET EQUAL PARAM_FUNC | SELF | FUNC_FORM | ALPHABET POINT FUNC_FORM
OPEN_CALL -> OPEN PARAM_STATE
COMMENT -> HASHTAG SENTENCE | COMMENT_QUOTATION QUOTATION_COMMENT_SENTENCE COMMENT_QUOTATION
QUOTATION_COMMENT_SENTENCE -> SENTENCE | SENTENCE QUOTATION_COMMENT_SENTENCE
RAISE_STATE -> RAISE ERROR OP_BRACK STRING CS_BRACK
ERROR -> ZeroDivisionError | ValueError | TypeError | IOERROR | NameError | ImportError
ASSIGN_DICT -> ALPHABET EQUAL OP_CURLY_BRACK CS_CURLY_BRACK | ALPHABET EQUAL OP_CURLY_BRACK DICT_CONTENT CS_CURLY_BRACK
DICT -> OP_CURLY_BRACK DICT_CONTENT CS_CURLY_BRACK
DICT_CONTENT -> EXPRESSION COLON EXPRESSION | DICT_CONTENT COMMA DICT_CONTENT
QUOTE_MARK -> '
COMMENT_QUOTATION -> QUOTE_MARK QUOTE_MARK QUOTE_MARK
POINT -> .
IF -> if
ELIF -> elif
ELSE -> else
IMPORT -> import
FROM -> from
AS -> as
DEF -> def
NONE -> None
WITH -> with
RETURN -> return
CONTINUE -> continue
BREAK -> break
PASS -> pass
RAISE -> raise
IN -> in
CLASS -> class
MINUS -> -
PLUS -> +
MUL -> *
DIV -> /
MOD -> %
AND -> and
OR -> or
NOT -> not
EQUAL -> =
WHILE -> while
FOR -> for
INPUT -> input
COLON -> : 
COMMA -> ,
OP_SQ_BRACK -> [
CS_SQ_BRACK -> ]
OP_BRACK -> (
CS_BRACK -> )
OP_CURLY_BRACK -> {
CS_CURLY_BRACK -> }
GREATER -> >
LESS -> <
DQUOTE_MARK -> "
HASHTAG -> #
RANGE -> range
PRINT -> print
EXC_MARK -> !
OPEN -> open
SELF -> self
APPEND -> append
LEN -> len
IS -> is
WRITE -> write